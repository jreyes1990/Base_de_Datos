/*************************************************************************************************************************/
***** INTRODUCCION AL CURSO *****
      * CONTENIDO DEL CURSO:
        01. INTRODUCCION A PL/SQL.
        02. PREPARAR LA INFRAESTRUCTURA.
        03. BLOQUES DE PL-SQL.
        04. VARIABLES, ESTRUCTURAS DE CONTROL, BLUCLES.
        05. USO DE SQL EN PL/SQL.
        06. EXCEPCIONES.
        07. COLECCIONES Y TIPOS ASOCIADOS.
        08. CURSORES. 
        09. PROCEDIMIENTOS Y FUNCIONES.
        10. PAQUETES.
        11. TRIGGERS.
        
        
      * HERRAMIENTAS A UTILIZAR:
        - Oracle Database Express Edition 21c.
        - Oracle SQL Developer.
        
        
      * PL/SQL:
        - Lenguaje de programacion procedural desarrollado por Oracle para su base de datos.
        - Integrado con sus bases de datos.
       
        
      * QUE ES PL/SQL:
        - Una extension procedural para el lenguaje SQL de Oracle.
          - SQL no es un lenguaje procedural.
          - PL/SQL permite suplir esas carencias.
          
        - Permite una mayor potencia la hora de acceder a Bases de Datos Oracle.
        
        
       * BLOQUES PL/SQL:
         - El objeto basico de PL/SQL es un bloque.
         - Los bloques estan divididos en las siguientes secciones.
           - DECLARE
           - BEGIN
           - EXCEPTION
           - END 
           
           
       * TIPO DE PROGRAMAS PL/SQL:
         - Existen distintos tipos de componentes en PL/SQL.
           - BLOQUES ANONIMOS
           - PROCEDIMIENTOS Y FUNCIONES
           - TRIGGERS
           
       * TABLAS A UTILIZAR DEL USUARIO "HR"
         - EMPLOYEES: Tabla de empleados.
         - DEPARTMENTS: Contiene los departamentos.
         - REGIONS: Contiene las regiones.
         - JOBS: Contiene los tipos de trabajos.
         - COUNTRIES: Contiene los paises.
           
        
***** SECCION 2 - PREPARACION INFRAESTRUCTURA NECESARIA (SOLO SI NO LA TIENES) *****
      * ORACLE EXPRESS:
        - Edicion basica de la base de datos de Oracle.
        - Es facil de descargar, instalar y administrar.
        - Se puede utilizar sin cargos para desarrollar, implementar y distribuir.
        - Se puede "integrar" en nuestras aplicaciones de forma gratuita.
        - Existe version para windows y linux.
       
        
      * ORACLE EXPRESS - LIMITACIONES:
        - El tamaño de la base de datos no puede exceder de 12 GB.
        - Solo estan soportadas 2 CPU.
        - Como maximo 2GB de RAM.
        - Solo se puede instalar una instancia en cada máquina.
        - Carece de varias de las caracteristicas de las versiones Enterprise y Standar.
        
        
     * ORACLE EXPRESS - REQUISITOS:
       - Windows o linux
       - 2GB de RAM
       - 10GB de espacio en disco.
       
     * SI ESTA UTILIZANDO ORACLE11G EXPRESS, SEGUIR LOS SIGUIENTE PASOS, ENLACE: http://blog.hadsonpar.com/2016/04/habilitar-usuario-hr-oracle.html
       - Habilitar Usuario HR Oracle 
         Al realizar la primera instalación del Oracle, el usuario HR por defecto está bloqueado y por ende no podemos loguearnos como dicho usuario, lo que debe hacer son los siguiente pasos, 
         aplicables para Linux o Windows.
       - NOTA: A partir de la version 21, Oracle Express decidio eliminar de la instacion el USUARIO "HR"
        
       * UBICACION: ( /Documentos/BBDD/ORACLE/PLSQL/SECCION 2 - PREPARACION INFRAESTRUCTURA ), 
         - CONEXION DESDE LA TERMINAL: 
           sqlplus system/admin@localhost:1521
         - EJECUTAR EL ARCHIVO "tablas_hr.sql", realizar todo el proceso que tiene el archivo.
           start tablas_hr.sql
           
         por lo que se tendra que instalar, de lo contrario, seguir los siguientes pasos.

         1. Conectarse como usuario system o sysdba + contraseña haciendo uso del comando connect.
            Si en caso se ha vencido la contraseña, ir al siguiente enlace: https://www.dataprix.com/es/blog-it/ilmasacratore/recuperar-contrasena-del-usuario-sys-y-system-oracle-9i
            - USUARIO:  SYSTEM
            - PASSWORD: admin 
   
         2. Hacer uso  del comando alter user hr account unlock desbloqueamos la cuenta.
            ALTER USER HR ACCOUNT UNLOCK;
   
         3. Escribimos el comando alter user HR identified by hr; con esto estamos diciendo que la contraseña será hr. 
            ALTER USER HR IDENTIFIED BY HR;
            
            
***** SECCION 5 - PRIMEROS PASOS EN PL/SQL *****
      * VARIABLES:
        - Al igual que en otros lenguajes, PL/SQL dispones de variables para almacenar valores durante el desarrollo de los programas.
          1. Pueden ser de distintos tipos.
          2. Pueden ser utilizadas en comandos SQL.
          3. Para nombrar una variable:
             - Debe comenzar por una letra.
             - Podemos incluir numeros o letras.
             - Pueden tener algunos caracteres especiales:
               ( $ , _ , etc )
             - El nombre no puede ser mas largo de 30 caracteres.
             - No podemos usar palabras reservadas.
             
             
      * DONDE USAMOS LAS VARIABLES:
        - Las variables se declaran e inicializan en la seccion DECLARE del bloque PL/SQL.
        - Por tanto, si usamos alguna variable en el bloque ya es obligatorio poner la zona de declaracion.
        - Podemos pasarlos como argumentos a otros programas PL/SQL.
        - Pueden almacenar valores devueltos por otros programas PL/SQL.
        - EJEMPLOS: 
          DECLARE
            SALARY     NUMBER(2);
            NAME       VARCHAR2(100);
            BIRTH_DATE DATE;
            
            
        - Para poner un valor a una variable se utilizar " := "
        - EJEMPLOS: 
          DECLARE
            SALARY     NUMBER(2) := 1000;
            NAME       VARCHAR2(100) := 'Jhon Connors';
            BIRTH_DATE DATE := '16-jun-1989';
        
        
        - En la zona BEGIN se utilizan como cualquier otro lenguaje de programacion.
        - EJEMPLOS: 
          DECLARE
            SALARY     NUMBER(2) := 1000;
            NAME       VARCHAR2(100) := 'Jhon Connors';
            BIRTH_DATE DATE := '16-jun-1989';
          BEGIN
            SALARY := SALARY*10;
            IF SALARY > 10000 THEN
              .....
              .....
              
              
        - Tipos de variables:
          - Escalares: Algunos ejemplos que usaremos dentro del curso.
            01. CHAR(LONGUITUD)
            02. VARCHAR2(LONGUITUD)
            03. LONG
            04. LONG RAW
            05. NUMBER(PRECISION, ESCALA)
            06. BINARY_INTEGER
            07. PLS_INTEGER
            08. BOOLEAN
            09. BYNARY_FLOAT
            10. BYNARY_DOUBLE
            11. DATE
            12. TIMESTAMP
            13. TIMESTAMP WITH TIME ZONE
            14. TIMESTAMP WITH LOCAL TIME ZONE
            15. INTERNAL YEAR TO MONTH
            16. INTERNAL DAY TO SECOND
            
           
          - Compuestas.
          - De Referencia.
          - LOBs. Large Objects.
          - Bind variables. Asociadas a los comandos SQL.
            
      
      * CONSTANTES Y NULL:
      * FUNCIONES, ENLACE: https://docs.oracle.com/cloud/help/es/analytics-cloud/ACSMD/GUID-4CBCE8D4-CF17-43BD-AAEF-C5D614A8040A.htm#ACSMD-GUID-7E9D5507-A60A-42EC-B9F6-CEE98A1F4898
      
      
***** SECCION 6 - ESTRUCTURAS DE CONTROL *****
***** SECCION 7 - USAR SQL EN PL/SQL *****
      - ENLACE: https://magicplsql.blogspot.com/
      - %TYPE: Se utiliza para declarar una variable de tipo columna. 
               Dicha variable tiene el mismo tipo de dato y tamaño que la columna de la tabla.
               
      - %ROWTYPE: Se utiliza para declarar un Record que contenga toda la fila de una tabla o vista. 
                  Los campos en el Record toman los nombres y tipos de datos de las columnas de la tabla o vista. 
                  El Record también puede almacenar toda una fila de datos obtenida de un cursor o variable de cursor.

***** SECCION 8 - EXEPCIONES EN PL/SQL *****
      - ENLACE: https://magicplsql.blogspot.com/2016/10/manejo-de-excepciones.html
      
      * EXCEPCIONES PREDEFINIDAS, ENLACE: https://www.plsql.biz/2007/01/manejo-de-excepciones-el-plsql.html
        Las excepciones predefinidas no necesitan ser declaradas y son las siguientes:
        - DUP_VAL_ON_INDEX - Se produce cuando se intenta almacenar un valor ya existente en una columna que tiene restricción de índice único.
        - TIMEOUT_ON_RESOURCE - Se excedió el tiempo máximo de espera por un recurso en Oracle.
        - NOT_LOGGED_ON - El programa efectuó una llamada a Oracle sin estar conectado.
        - LOGIN_DENIED - El login o la contraseña utilizados para entrar en Oracle son inválidos.
        - NO_DATA_FOUND - Una sentencia SELECT INTO no devolvió ningún registro.
        - TOO_MANY_ROWS - Una sentencia SELECT INTO devolvió más de un registro.
        - ZERO_DIVIDE - Se ha ejecutado una división donde el divisor valía cero.
        - STORAGE_ERROR - Si no se dispone de más memoria o la memoria esta dañada.
        - PROGRAM_ERROR - Ocurrió un problema interno al ejecutar el código PL/SQL.
        - INVALID_NUMBER - Cuando falla la conversión de una cadena de caracteres hacia un número porque la cadena no representa un número válido.
        - VALUE_ERROR - Ocurrió un error aritmético, de conversión o truncamiento. Por ejemplo, esto sucede cuando se intenta dar un valor muy grande a una variable que no soporta dicho tamaño.
        - ROWTYPE_MISMATCH - Los elementos de una asignación (el valor a asignar y la variable que lo contendrá) son de tipos incompatibles. 
          También se presenta este error cuando un parámetro pasado a un subprograma no es del tipo esperado.
        - SYS_INVALID_ROWID - Falla la conversión de una cadena de caracteres hacia un tipo rowid porque la cadena no representa un número.
        - INVALID_CURSOR - Se efectuó una operación no válida sobre un cursor. Suele ocurrir cuando un cursor no está abierto y se ejecuta una sentencia para cerrar dicho cursor.
        - CURSOR_ALREADY_OPEN - Cuando se intenta abrir un cursor que ya estaba abierto. Hay que recordar que un cursor de tipo FOR se abre automáticamente por lo que no se debe ejecutar la sentencia OPEN.
        - ACCESS_INTO_NULL - Se intentó asignar un valor a los atributos de un objeto no inicializado.
        - COLLECTION_IS_NULL - Se intentó asignar un valor a una tabla anidada aún no inicializada.
        - SELF_IS_NULL - El parámetro SELF (el primero que es pasado a un método MEMBER) es nulo.
        - OTHERS - Cualquier otro tipo de error que pueda producirse. Cuando se utiliza la excepción OTHERS, cualquier excepción que no se haya tratado anteriormente se procesará según la secuencia 
          de instrucciones incluida dentro de la sección OTHERS. OTHERS debe ser la última excepción tratada dentro de la sección dedicada al tratamiento de excepciones.

