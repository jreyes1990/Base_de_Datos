/******************************************************************************/
/***** INTRODUCCION A LAS EXCEPCIONES DE PL/SQL *****/
SET SERVEROUTPUT ON;

DECLARE
  EMPL EMPLOYEES%ROWTYPE;
BEGIN
  SELECT * INTO EMPL FROM EMPLOYEES WHERE EMPLOYEE_ID=100;
  DBMS_OUTPUT.PUT_LINE(EMPL.FIRST_NAME);
  
  EXCEPTION --MANEJO DE EXCEPCIONES
    WHEN EX1 THEN
      NULL;
    WHEN EX2 THEN
      NULL;
    WHEN OTHERS THEN
      NULL;
END;

/******************************************************************************/
/***** EXCEPCIONES PREDEFINIDAS DE PL/SQL *****/
SET SERVEROUTPUT ON;

DECLARE
  EMPL EMPLOYEES%ROWTYPE;
BEGIN
  SELECT * INTO EMPL FROM EMPLOYEES WHERE EMPLOYEE_ID=100;
  DBMS_OUTPUT.PUT_LINE(EMPL.FIRST_NAME);
  
  EXCEPTION --MANEJO DE EXCEPCIONES
  -- NO_DATA_FOUND
  -- TOO_MANY_ROWS
  -- ZERO_DIVIDE
  -- DUP_VAL_ON_INDEX
    WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE('ERROR ORA-01403, EMPLEADO INEXISTENTE');
    WHEN TOO_MANY_ROWS THEN
      DBMS_OUTPUT.PUT_LINE('ERROR ORA-01422, DEMASIADOS EMPLEADOS');
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('ERROR INDEFINIDO');
END;

/******************************************************************************/
/***** EXCEPCIONES NO PREDEFINIDAS DE PL/SQL *****/
SET SERVEROUTPUT ON;

DECLARE
  MI_EXCEP EXCEPTION;
  PRAGMA EXCEPTION_INIT(MI_EXCEP,-937);
  V1 NUMBER;
  V2 NUMBER;
BEGIN
  SELECT EMPLOYEE_ID, SUM(SALARY) INTO V1,V2 FROM EMPLOYEES;
  DBMS_OUTPUT.PUT_LINE(V1);
  
  EXCEPTION
    WHEN MI_EXCEP THEN
      DBMS_OUTPUT.PUT_LINE('FUNCION DE GRUPO INCORRECTA');
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('ERROR INDEFINIDO');
END;

/******************************************************************************/
/***** EXCEPCIONES DE PL/SQL - SQLCODE y SQLERRM *****/
CREATE TABLE ERRORS(
  CODE    NUMBER,
  MESSAGE VARCHAR2(200)
);

SELECT * FROM ERRORS;

SET SERVEROUTPUT ON;

DECLARE
  EMPL    EMPLOYEES%ROWTYPE;
  CODE    ERRORS.CODE%TYPE;
  MESSAGE ERRORS.MESSAGE%TYPE;
BEGIN
  SELECT * INTO EMPL FROM EMPLOYEES;
  DBMS_OUTPUT.PUT_LINE(EMPL.SALARY);
  
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE(SQLCODE);
      DBMS_OUTPUT.PUT_LINE(SQLERRM);
      CODE := SQLCODE;
      MESSAGE := SQLERRM;
      INSERT INTO ERRORS VALUES(CODE,MESSAGE);
      COMMIT;
END;


