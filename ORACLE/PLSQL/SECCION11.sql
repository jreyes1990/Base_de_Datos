/******************************************************************************/
/***** PROCEDIMIENTOS Y FUNCIONES DE PL/SQL *****/
/***** CREAR UN PROCEDIMIENTO DE PL/SQL *****/
CREATE OR REPLACE PROCEDURE PR1
IS
  X NUMBER := 10;
BEGIN
  DBMS_OUTPUT.PUT_LINE(X);
END;

-- EJECUTANDO EL PROCEDIMIENTO
EXECUTE PR1;

BEGIN
  PR1;
END;

/***** VER CODIGO FUENTE DE PROCEDIMIENTOS Y FUNCIONES *****/
SELECT * FROM USER_OBJECTS WHERE OBJECT_TYPE='VIEW';

SELECT * FROM USER_SOURCE WHERE NAME='PR1';

/***** PARAMETROS TIPO IN - PROCEDIMIENTO *****/
SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE CALC_TAX(EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE, T IN NUMBER)
IS
  TAX NUMBER := 0;
  SAL NUMBER := 0;
BEGIN
  IF T<0 OR T>60 THEN
    RAISE_APPLICATION_ERROR(-20000, 'EL PORCENTAJE DEBE ESTAR ENTRE 0 Y 60');
  END IF;
  SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
  TAX := (SAL*T)/100;
  DBMS_OUTPUT.PUT_LINE('SALARY: '||SAL);
  DBMS_OUTPUT.PUT_LINE('TAX: '||TAX);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE('NO EXISTE EL EMPLEADO');
END;


EXECUTE CALC_TAX(100,60);

/***** PARAMETROS TIPO OUT - PROCEDIMIENTO *****/
SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE CALC_TAX_OUT(EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE, T1 IN NUMBER, R1 OUT NUMBER)
IS
  SAL NUMBER := 0;
BEGIN
  IF T1<0 OR T1>60 THEN
    RAISE_APPLICATION_ERROR(-20000, 'EL PORCENTAJE DEBE ESTAR ENTRE 0 Y 60');
  END IF;
  SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
  R1 := (SAL*T1)/100;
  DBMS_OUTPUT.PUT_LINE('SALARY: '||SAL);
  DBMS_OUTPUT.PUT_LINE('TAX: '||R1);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE('NO EXISTE EL EMPLEADO');
END;

DECLARE
  A NUMBER;
  B NUMBER;
  C NUMBER;
BEGIN
  A := 100;
  B := 5;
  C := 0;
  CALC_TAX_OUT(A,B,C);
END;

/***** PARAMETROS TIPO IN OUT - PROCEDIMIENTO *****/
SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE CALC_TAX_IN_OUT(EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE, T1 IN OUT NUMBER)
IS
  SAL NUMBER := 0;
BEGIN
  IF T1<0 OR T1>60 THEN
    RAISE_APPLICATION_ERROR(-20000, 'EL PORCENTAJE DEBE ESTAR ENTRE 0 Y 60');
  END IF;
  SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
  T1 := (SAL*T1)/100;
  DBMS_OUTPUT.PUT_LINE('SALARY: '||SAL);
  DBMS_OUTPUT.PUT_LINE('TAX: '||T1);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE('NO EXISTE EL EMPLEADO');
END;

DECLARE
  A NUMBER;
  B NUMBER;
BEGIN
  A := 100;
  B := 5;
  CALC_TAX_IN_OUT(A,B);
END;

/******************************************************************************/
/***** FUNCIONES DE PL/SQL *****/
SET SERVEROUTPUT ON;

CREATE OR REPLACE FUNCTION CALC_TAX_F(EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE, T IN NUMBER)
RETURN NUMBER
IS
  TAX NUMBER := 0;
  SAL NUMBER := 0;
BEGIN
  IF T<0 OR T>60 THEN
    RAISE_APPLICATION_ERROR(-20000, 'EL PORCENTAJE DEBE ESTAR ENTRE 0 Y 60');
  END IF;
  SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
  TAX := (SAL*T)/100;
  DBMS_OUTPUT.PUT_LINE('SALARY: '||SAL);
  DBMS_OUTPUT.PUT_LINE('TAX: '||TAX);
  RETURN TAX;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE('NO EXISTE EL EMPLEADO');
END;

SELECT CALC_TAX_F(100,5) FROM DUAL;