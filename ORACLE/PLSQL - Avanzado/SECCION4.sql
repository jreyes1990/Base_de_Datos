/******************************************************************************/
/***** CREAR INDEX BY TABLES - ARRAYS ASOCIATIVOS *****/
SET SERVEROUTPUT ON;

DECLARE
  -- CREANDO EL PRIMER TIPO DE TABLA
  TYPE DEPARTAMENTOS IS TABLE OF DEPARTMENTS.DEPARTMENT_NAME%TYPE INDEX BY PLS_INTEGER;
  -- CREANDO EL SEGUNDO TIPO DE TABLA
  TYPE EMPLEADOS IS TABLE OF EMPLOYEES%ROWTYPE INDEX BY PLS_INTEGER;
  TYPE NOMBRE IS TABLE OF EMPLOYEES.FIRST_NAME%TYPE INDEX BY VARCHAR2(2);
  
  DEPTS   DEPARTAMENTOS;
  EMPLS   EMPLEADOS;
  NOMBRES NOMBRE;
BEGIN
  -- INTRODUCIR DATOS EN INDEX BY TABLE
  DEPTS(1)      := 'HOLA';
  DEPTS(2)      := 'ADIOS';
  DEPTS(50)     := 'OTRO VALOR';
  DEPTS(-10)    := 'SIGUIENTE VALOR';
  NOMBRES('AA') := 'PEDRO';
  
  DBMS_OUTPUT.PUT_LINE(DEPTS(2));
  DBMS_OUTPUT.PUT_LINE(DEPTS(-10));
  DBMS_OUTPUT.PUT_LINE(NOMBRES('AA'));
  
  -- INTRODUCIR DATOS COMPUESTOS EN INDEX BY TABLE
  EMPLS(10).FIRST_NAME := 'SERGIO';
  
  DBMS_OUTPUT.PUT_LINE(EMPLS(10).FIRST_NAME);
END;

/***** CARGAR UN INDEX BY TABLES CON UNA TABLA - ARRAYS ASOCIATIVOS *****/
SET SERVEROUTPUT ON;

DECLARE
  -- CREANDO EL PRIMER TIPO DE TABLA
  TYPE DEPARTAMENTOS IS TABLE OF DEPARTMENTS.DEPARTMENT_NAME%TYPE INDEX BY PLS_INTEGER;
  -- CREANDO EL SEGUNDO TIPO DE TABLA
  TYPE EMPLEADOS IS TABLE OF EMPLOYEES%ROWTYPE INDEX BY PLS_INTEGER;
  TYPE NOMBRE IS TABLE OF EMPLOYEES.FIRST_NAME%TYPE INDEX BY VARCHAR2(2);
  
  DEPTS   DEPARTAMENTOS;
  EMPLS   EMPLEADOS;
  NOMBRES NOMBRE;
  
  -- RELLENANDO EL TYPE DEPARTAMENTOS POR MEDIO DE UN CURSOR
  CURSOR CUR_DEPT IS SELECT * FROM DEPARTMENTS;
  X PLS_INTEGER := 1;
  
  CURSOR CUR_EMP IS SELECT * FROM EMPLOYEES WHERE SALARY > 5000;
  Z PLS_INTEGER := 1;
BEGIN
  -- CARGA DE BUCLE PARA LLENAR LOS DEPARTAMENTOS
  FOR DEPT1 IN CUR_DEPT LOOP
    DEPTS(X) := DEPT1.DEPARTMENT_NAME;
    X := X+1;
  END LOOP;
  
  -- CARGA DE BUCLE PARA VISUALIZAR LOS DEPARTAMENTOS
  FOR I IN 1..X-1 LOOP
    DBMS_OUTPUT.PUT_LINE(DEPTS(I));
  END LOOP;
  
  -- INTRODUCIR DATOS COMPUESTOS EN INDEX BY TABLE
  DBMS_OUTPUT.PUT_LINE('CARGA DE INDEX TABLE - DATOS COMPUESTOS');
  -- CARGA DE BUCLE PARA LLENAR LOS EMPLEADOS
  FOR EMP1 IN CUR_EMP LOOP
    EMPLS(Z) := EMP1;
    Z := Z+1;
  END LOOP;
  
  -- CARGA DE BUCLE PARA VISUALIZAR LOS EMPLEADOS
  FOR J IN 1..Z-1 LOOP
    DBMS_OUTPUT.PUT_LINE(EMPLS(J).FIRST_NAME||' '||EMPLS(J).SALARY);
  END LOOP;
  
END;

/***** CARGAS MASIVAS DE FORMA SENCILLA - BULK COLLECTION *****/
SET SERVEROUTPUT ON;

DECLARE
  TYPE EMPLEADOS IS TABLE OF EMPLOYEES%ROWTYPE INDEX BY PLS_INTEGER;
  
  EMPLES EMPLEADOS;
BEGIN
  SELECT * BULK COLLECT INTO EMPLES FROM EMPLOYEES WHERE SALARY > 5000;
  
  FOR I IN 1..EMPLES.COUNT() LOOP
    DBMS_OUTPUT.PUT_LINE(EMPLES(I).FIRST_NAME);
  END LOOP;
END;

/***** METODO DE COLECCIONES *****/
SET SERVEROUTPUT ON;

DECLARE
  TYPE SUMA_SALARIOS IS RECORD(
    NOMBRE DEPARTMENTS.DEPARTMENT_NAME%TYPE,
    SUMA_SALARIOS NUMBER
  );
  
  TYPE SUMA_SAL IS TABLE OF SUMA_SALARIOS INDEX BY PLS_INTEGER;
  
  SALARIOS SUMA_SAL;
BEGIN
  SELECT DEPARTMENT_NAME, SUM(SALARY)
    BULK COLLECT INTO SALARIOS
  FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
  GROUP BY DEPARTMENT_NAME;
  
  FOR I IN 1..SALARIOS.COUNT() LOOP
    DBMS_OUTPUT.PUT_LINE(SALARIOS(I).NOMBRE||' '||SALARIOS(I).SUMA_SALARIOS);
  END LOOP;
  
  DBMS_OUTPUT.PUT_LINE('NUMERO DE FILAS: '||SALARIOS.COUNT());
  DBMS_OUTPUT.PUT_LINE('PRIMER REGISTRO: '||SALARIOS.FIRST());
  DBMS_OUTPUT.PUT_LINE('ULTIMO REGISTRO: '||SALARIOS.LAST());
  IF (SALARIOS.EXISTS(3)) THEN
    DBMS_OUTPUT.PUT_LINE('EXISTE');
  ELSE
    DBMS_OUTPUT.PUT_LINE('NO EXISTE');
  END IF;
  SALARIOS.DELETE(1);
  DBMS_OUTPUT.PUT_LINE('PRIMER REGISTRO: '||SALARIOS.FIRST());
  DBMS_OUTPUT.PUT_LINE('FILA ANTERIOR A LA 3: '||SALARIOS.PRIOR(3));
  DBMS_OUTPUT.PUT_LINE('FILA SUPERIOR A LA 3: '||SALARIOS.NEXT(3));
  SALARIOS.DELETE(4);
  DBMS_OUTPUT.PUT_LINE('FILA ANTERIOR A LA 3: '||SALARIOS.PRIOR(3));
  DBMS_OUTPUT.PUT_LINE('FILA SUPERIOR A LA 3: '||SALARIOS.NEXT(3));
END;

/******************************************************************************/
/***** CREAR Y CARGAR VARRAYS *****/
SET SERVEROUTPUT ON;

DECLARE
  TYPE V1 IS VARRAY(50) OF VARCHAR2(100);
  
  VAR1 V1 := V1('ADIOS', 'HOLA', 'TERCERO', 'XXX', 'ZZZ');
BEGIN
  DBMS_OUTPUT.PUT_LINE(VAR1(1));
  VAR1(1) := 'HOLA';
  DBMS_OUTPUT.PUT_LINE(VAR1(1));
  DBMS_OUTPUT.PUT_LINE(VAR1(5));
END;

/***** EXTENDER VARRAYS - CLAUSULA EXTEND, VIDEO # 36 *****/
