/******************************************************************************/
/***** SELECT INTO - PRACTICA *****/
/* Realiza los siguientes ejemplos. Usa %ROWTYPE y %TYPE */
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID=100 ORDER BY SALARY DESC;
/* 1. PRÁCTICA 1
      • Crear un bloque PL/SQL que devuelva al salario máximo del
        departamento 100 y lo deje en una variable denominada salario_maximo
        y la visualice.
*/
SET SERVEROUTPUT ON;

DECLARE
  SALARIO_MAXIMO EMPLOYEES.SALARY%TYPE;
BEGIN
  SELECT MAX(SALARY) INTO SALARIO_MAXIMO
  FROM EMPLOYEES WHERE DEPARTMENT_ID=100;
  DBMS_OUTPUT.PUT_LINE('EL SALARIO MAXIMO DEL DEPARTAMENT_ID 100 ES: '||SALARIO_MAXIMO);
END;

/* 2. PRÁCTICA2
      • Visualizar el tipo de trabajo del empleado número 100 
*/
SET SERVEROUTPUT ON;

DECLARE
  TIPO_TRABAJO EMPLOYEES%ROWTYPE;
BEGIN
  SELECT * INTO TIPO_TRABAJO
  FROM EMPLOYEES WHERE EMPLOYEE_ID=100;
  DBMS_OUTPUT.PUT_LINE('EL EMPLEADO '||TIPO_TRABAJO.FIRST_NAME||' '||TIPO_TRABAJO.LAST_NAME||' CON ID '||TIPO_TRABAJO.EMPLOYEE_ID||' TIENE UN TRABAJO DE '||TIPO_TRABAJO.JOB_ID);
END;

/* 3. PRÁCTICA 3
      • Crear una variable de tipo DEPARTMENT_ID y ponerla algún valor, por
        ejemplo 10.
      • Visualizar el nombre de ese departamento y el número de empleados
        que tiene, poniendo. Crear dos variables para albergar los valores.
*/
SET SERVEROUTPUT ON;

DECLARE
  DEPARTAMENTO_ID     EMPLOYEES.DEPARTMENT_ID%TYPE;
  DEPARTAMENTO_NOMBRE DEPARTMENTS.DEPARTMENT_NAME%TYPE;
  NUMERO_EMPLEADOS    NUMBER;
BEGIN
  DEPARTAMENTO_ID := 10;
  SELECT DEPARTMENTS.DEPARTMENT_NAME, COUNT(*)
  INTO DEPARTAMENTO_NOMBRE, NUMERO_EMPLEADOS
  FROM EMPLOYEES INNER JOIN DEPARTMENTS ON(EMPLOYEES.DEPARTMENT_ID=DEPARTMENTS.DEPARTMENT_ID)
  WHERE EMPLOYEES.DEPARTMENT_ID=DEPARTAMENTO_ID
  GROUP BY DEPARTMENTS.DEPARTMENT_NAME;
  DBMS_OUTPUT.PUT_LINE('DEPARTAMENTO '||DEPARTAMENTO_NOMBRE||', tiene '||NUMERO_EMPLEADOS||' empleados.');
END;

/* 4. PRÁCTICA 4
      • Mediante dos consultas recuperar el salario máximo y el salario mínimo
        de la empresa e indicar su diferencia.
*/
SET SERVEROUTPUT ON;

DECLARE
  SALARIO_MAX EMPLOYEES.SALARY%TYPE;
  SALARIO_MIN EMPLOYEES.SALARY%TYPE;
  SALARIO_DIF EMPLOYEES.SALARY%TYPE;
BEGIN
  SELECT MAX(SALARY), MIN(SALARY) INTO SALARIO_MAX, SALARIO_MIN FROM EMPLOYEES;
  SALARIO_DIF := SALARIO_MAX-SALARIO_MIN;
  DBMS_OUTPUT.PUT_LINE('SALARIOS MAXIMO: '||SALARIO_MAX||', MINIMO: '||SALARIO_MIN);
  DBMS_OUTPUT.PUT_LINE('DEFERENCIA DE SALARIOS: '||SALARIO_DIF);
END;

/******************************************************************************/
/***** INSERT, UPDATE, DELETE - PRACTICA *****/
/* 1- Crear un bloque que inserte un nuevo departamento en la tabla
      DEPARTMENTS. Para saber el DEPARTMENT_ID que debemos asignar al
      nuevo departamento primero debemos averiguar el valor mayor que hay en la
      tabla DEPARTMENTS y sumarle uno para la nueva clave.
      • Location_id debe ser 1000
      • Manager_id debe ser 100
      • Department_name debe ser “INFORMATICA”
      • NOTA: en PL/SQL debemos usar COMMIT y ROLLBACK de la misma
        forma que lo hacemos en SQL. Por tanto, para validar definitivamente un
        cambio debemos usar COMMIT.
*/
SELECT MAX(DEPARTMENT_ID) FROM DEPARTMENTS;
SELECT * FROM DEPARTMENTS;

SET SERVEROUTPUT ON;

DECLARE
  DEPTO DEPARTMENTS%ROWTYPE;
BEGIN
  SELECT MAX(DEPARTMENT_ID)+1 INTO DEPTO.DEPARTMENT_ID FROM DEPARTMENTS;
  DEPTO.LOCATION_ID := 1000;
  DEPTO.MANAGER_ID := 100;
  DEPTO.DEPARTMENT_NAME := 'INFORMATICA';
  DBMS_OUTPUT.PUT_LINE('NUEVO DEPARTMENT_ID: '||DEPTO.DEPARTMENT_ID);
  INSERT INTO DEPARTMENTS (DEPARTMENT_ID,DEPARTMENT_NAME,MANAGER_ID,LOCATION_ID) 
         VALUES(DEPTO.DEPARTMENT_ID,DEPTO.DEPARTMENT_NAME,DEPTO.MANAGER_ID,DEPTO.LOCATION_ID);
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('SE HA INSERTADO LO SIGUIENTE:');
  DBMS_OUTPUT.PUT_LINE('DEPARTMENT_ID: '||DEPTO.DEPARTMENT_ID);
  DBMS_OUTPUT.PUT_LINE('DEPARTMENT_NAME: '||DEPTO.DEPARTMENT_NAME);
  DBMS_OUTPUT.PUT_LINE('MANAGER_ID: '||DEPTO.MANAGER_ID);
  DBMS_OUTPUT.PUT_LINE('LOCATION_ID: '||DEPTO.LOCATION_ID);
END;


/* 2- Crear un bloque PL/SQL que modifique la LOCATION_ID del nuevo
      departamento a 1700. En este caso usemos el COMMIT dentro del bloque PL/SQL.
*/
SET SERVEROUTPUT ON;

DECLARE
  DEPARTAMENTO_ID DEPARTMENTS.DEPARTMENT_ID%TYPE;
BEGIN
  DEPARTAMENTO_ID := 271;
  UPDATE DEPARTMENTS SET LOCATION_ID=1700 WHERE DEPARTMENT_ID=DEPARTAMENTO_ID;
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('SE HA ACTUALIZADO EL DEPARTMENT_ID '||DEPARTAMENTO_ID||' CORRECTAMENTE');
END;

/* 3- Por último, hacer otro bloque PL/SQL que elimine ese departamento nuevo.
*/
SET SERVEROUTPUT ON;

DECLARE
  DEPARTAMENTO_ID DEPARTMENTS.DEPARTMENT_ID%TYPE;
BEGIN
  DEPARTAMENTO_ID := 271;
  DELETE FROM DEPARTMENTS WHERE DEPARTMENT_ID=DEPARTAMENTO_ID;
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('SE HA ELIMINADO EL DEPARTMENT_ID '||DEPARTAMENTO_ID||' CORRECTAMENTE');
END;

